buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

group = 'com.ejemplo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

test {
	useJUnit {
		exclude '**/*IntegrationTest.class'
		exclude '**/*ApplicationTests.class'
	}
}

task integrationTest(type: Test) {
	useJUnit {
		include '**/*IntegrationTest.class'
	}
	reports {
		// Lo siguiente esta deprecado, pero no tengo idea cual sera el reemplazo en la version mas reciente :(
		html.destination "$buildDir/reports/tests/integTest"
	}
}

jacoco {
	toolVersion = "0.8.1"
}


jacocoTestReport{
	executionData = project.fileTree(dir: '.', include:'**/build/jacoco/*.exec')
	classDirectories = project.fileTree(dir: '.', include:'**/build/classes/main/**/*', excludes: [])
	sourceDirectories = project.fileTree(dir: '.', include:'**/src/main/java/**/*')
}

def allTestCoverageFile = "$buildDir/jacoco/allTestCoverage.exec"
def allITCoverageFile = "$buildDir/jacoco/allITCoverage.exec"

sonarqube {
	properties {
		property "sonar.projectKey", "mingeso:Carrito-TotalCoverage"
		property "sonar.projectName", "Carrito-TotalCoverage"
		property "sonar.jacoco.reportPath", allTestCoverageFile
		property "sonar.jacoco.itReportPath", allITCoverageFile
	}
}

task jacocoMergeTest(type:JacocoMerge) {
	destinationFile = file(allTestCoverageFile)
	executionData = project.fileTree(dir: '.', include:'**/build/jacoco/test.exec')
}

task jacocoMergeIntegrationTest(type:JacocoMerge) {
	destinationFile = file(allITCoverageFile)
	// merge all the it coverage outputs from all projects into one
	executionData = project.fileTree(dir: '.', includes: ['**/build/jacoco/itTest.exec'])
}

task jacocoMerge(dependsOn: ['jacocoMergeTest', 'jacocoMergeIntegrationTest']) {
	// used to run the other merge tasks
}

subprojects {
	sonarqube {
		properties {
			property "sonar.jacoco.reportPath", allTestCoverageFile
			property "sonar.jacoco.itReportPath", allITCoverageFile
		}
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
