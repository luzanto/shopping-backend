import com.bmuschko.gradle.cargo.convention.Deployable
import com.bmuschko.gradle.cargo.tasks.remote.CargoRedeployRemote

buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
		classpath 'com.bmuschko:gradle-cargo-plugin:2.3'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'

group = 'com.ejemplo'
version = '0.1'
sourceCompatibility = 1.8



repositories {
	mavenCentral()
}

sourceSets {
	integtest {
		java {
			compileClasspath += main.output
			runtimeClasspath += main.output
			srcDir '$buildDir/reports/tests/integtest'
		}
	}
}

configurations {
	integtestCompile.extendsFrom testCompile
}

jacoco {
	toolVersion = "0.8.1"
}

task "integtest"(type: Test, dependsOn: integtestClasses) {
	testClassesDirs = sourceSets.integtest.output.classesDirs
	classpath = sourceSets.integtest.runtimeClasspath

	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoIntegTest.exec")
	}
}

test {
	jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
}

sonarqube {
	properties {
		properties["sonar.projectKey"] = "mingeso:Carrito-TotalCoverage"
		properties["sonar.projectName"] = "Carrito-TotalCoverage"
		properties["sonar.jacoco.reportPath", "$buildDir/jacoco/jacocoTest.exec"]
		properties["sonar.jacoco.itReportPath", "$buildDir/jacoco/jacocoIntegTest.exec"]
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test', 'junit:junit:4.12')

	def cargoVersion = '1.4.5'
	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
			"org.codehaus.cargo:cargo-ant:$cargoVersion"
}

cargo {
	containerId='tomcat7x'
}

task deployApp(type: CargoRedeployRemote) {
	description = "Deploys WAR to Tomcat ."  // description of task
	hostname = 'tomcat' // ip of the tomcat
	port = 8080 // port at which tomcat is running
	username = "tomcat" // username of tomcat
	password = "tomcat"  // password of the tomcat
	deployables = [
			new Deployable(file: file('build/libs/carrito-0.1.war'), context: 'carrito-0.1')]
}

