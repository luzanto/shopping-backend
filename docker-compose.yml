version: '3.1'
 
services:
  jenkins:
    build:
      context: .
    image: blackonyx/jenkins
    ports:
     - "8080:8080"
     - "50000:50000"
    networks:
      - jenkinsnet
    volumes:
     - "./jenkins/jobs:/var/jenkins_home/jobs/"
    secrets:
     - jenkinsUsername
     - jenkinsPassword

  carritodb:
    image: mysql:5.7.21
    restart: always
    networks:
      - jenkinsnet
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: carrito_app
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
     - carrito_data:/var/lib/mysql
    #command: >
     # start --max-connections=200 \
     #       --character-set-server=utf8mb4 \
     #       --collation-server=utf8mb4_unicode_ci

  sonarqube:
    image: sonarqube:6.7.3-alpine
    ports:
      - "9000:9000"
    networks:
      - jenkinsnet
      - sonarnet
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  sonardb:
    image: postgres:10.3-alpine
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data

networks:
  sonarnet:
    driver: bridge
  jenkinsnet:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:  
  carrito_data:

secrets:
  jenkinsUsername:
    file: ./jenkins/secrets/jenkinsUsername
  jenkinsPassword:
    file: ./jenkins/secrets/jenkinsPassword
